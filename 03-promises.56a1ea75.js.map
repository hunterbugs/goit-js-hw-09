{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEY,IAAAC,EAIZ,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,CAACN,EAAUC,IAGrBM,EAAO,CAACP,EAAUC,GAAO,GACxBA,EAAM,G,EAbDH,EAEN,QAFkBW,SAASC,cAAcZ,IAEhCa,iBAAiB,UAehC,SAAuBC,GACrBA,EAAEC,iBAEF,MAAMC,EAASF,EAAEG,cAAcC,SAC/B,IAAIC,EAAQC,OAAOJ,EAAOb,MAAMkB,OAChC,MAAMC,EAAOF,OAAOJ,EAAOM,KAAKD,OAC1BE,EAASH,OAAOJ,EAAOO,OAAOF,OACpCG,QAAQC,IAAIN,EAAOG,EAAMC,GAEzB,IAAK,IAAIG,EAAW,EAAGA,GAAYH,EAAQG,GAAY,EACjDA,EAAW,IACbP,GAAgBG,GAIlBrB,EAAcyB,EAAUP,GACrBQ,MAAK,EAAEzB,EAAUC,MAChBL,EAAA8B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAEhE2B,OAAM,EAAE5B,EAAUC,MACjBL,EAAA8B,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet getEl = selector => document.querySelector(selector);\n\ngetEl('.form').addEventListener('submit', onGetPromises);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve([position, delay]);\n      }\n\n      reject([position, delay]);\n    }, delay);\n  });\n}\n\nfunction onGetPromises(e) {\n  e.preventDefault();\n\n  const formEl = e.currentTarget.elements;\n  let delay = Number(formEl.delay.value);\n  const step = Number(formEl.step.value);\n  const amount = Number(formEl.amount.value);\n  console.log(delay, step, amount);\n\n  for (let position = 1; position <= amount; position += 1) {\n    if (position > 1) {\n      delay = delay + step;\n    }\n    // console.log([position, delay]);\n\n    createPromise(position, delay)\n      .then(([position, delay]) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(([position, delay]) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","selector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","formEl","currentTarget","elements","delay1","Number","value","step","amount","console","log","position1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.56a1ea75.js.map"}